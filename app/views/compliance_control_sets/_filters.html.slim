= search_form_for @q_for_form, url: compliance_control_sets_path, builder: SimpleForm::FormBuilder, class: 'form form-filter' do |f|
  .ffg-row
    .input-group.search_bar class=filter_item_class(params[:q], :name_cont)
      = f.search_field :name_cont, class: 'form-control', placeholder: t('compliance_control_sets.filters.name')
      span.input-group-btn
        button.btn.btn-default type='submit'
          span.fa.fa-search
  .ffg-row
    .form-group.togglable class=filter_item_class(params[:q], :organisation_name_eq_any)
      = f.label t('activerecord.models.organisation.one'), required: false, class: 'control-label'
      = f.input :organisation_name_eq_any, collection: organisations_filters_values, as: :check_boxes, value_method: :name, label: false, label_method: lambda {|w| ("<span>#{w.name}</span>").html_safe}, required: false, wrapper_html: {class: 'checkbox_list'}

    .form-group.togglable class=filter_item_class(params[:q], :updated_at)
      = f.label Import::Base.human_attribute_name(:updated_at), required: false, class: 'control-label'
      .filter_menu
        = f.simple_fields_for :updated_at do |p|
          = p.input :start_date, as: :date, label: false, wrapper_html: {class: 'date smart_date filter_menu-item'}, default: @begin_range, include_blank: @begin_range ? false : true
          = p.input :end_date, as: :date, label: false, wrapper_html: {class: 'date smart_date filter_menu-item'}, default: @end_range, include_blank: @end_range ? false : true

    .form-group.togglable class=filter_item_class(params[:q], :assigned_to_slots)
      = f.label ComplianceControlSet.tmf(:assigned_to), required: false, class: 'control-label'
      = f.input :assigned_to_slots, collection: Workgroup.compliance_control_sets_by_workgroup.update(Workgroup.compliance_control_sets_by_workbench).to_a, as: :check_boxes, value_method: :first, label: false, label_method: lambda {|w| ("<span>#{w.last}</span>").html_safe}, required: false, wrapper_html: {class: 'checkbox_list'}, checked: params[:q].try(:[], :assigned_to_slots)

  .actions
    = link_to t('actions.erase'), @compliance_control_set, class: 'btn btn-link'
    = f.submit t('actions.filter'), class: 'btn btn-default', id: 'compliance_control_set_filter_btn'
