- breadcrumb :export, @workbench, @export

- page_header_content_for @export

.page_content
  .container-fluid
    .row
      .col-lg-6.col-md-6.col-sm-12.col-xs-12
        - metadatas = { I18n.t("activerecord.attributes.export.type") => @export.object.class.human_name }
        - metadatas = metadatas.update({I18n.t("activerecord.attributes.export.status") => export_status(@export.status)})
        - metadatas = metadatas.update({I18n.t("activerecord.attributes.export.parent") => link_to(@export.parent.name, [@export.parent.workbench, @export.parent])}) if @export.parent.present?
        - metadatas = metadatas.update Hash[*@export.visible_options.map{|k, v| [t("activerecord.attributes.export.#{@export.object.class.name.demodulize.underscore}.#{k}"), @export.display_option_value(k, self)]}.flatten]
        - if @export.children.any?
          - files = @export.children.map(&:file).select(&:present?)
          - if files.any?
            - metadatas = metadatas.update({I18n.t("activerecord.attributes.export.files") => @export.file.present? ? link_to(@export.file.file.filename, @export.file.url, target: :blank) : "-"})
            - @export.children.each do |e|
              - metadatas = metadatas.update({"- #{e.class.human_name}" => e.file.present? ? link_to(e.file.file.filename, e.file.url, target: :blank) : "-"})
          - else
            - metadatas = metadatas.update({I18n.t("activerecord.attributes.export.files") => "-"})
        - else
          - metadatas = metadatas.update({I18n.t("activerecord.attributes.export.file") => (@export.file.present? ? link_to(t("actions.download"), @export.file.url, target: :blank) : "-")})
        = definition_list t('metadatas'), metadatas

    .row
      .col-lg-12
        .error_messages
          = render 'shared/iev_interfaces/messages', messages: @export.messages

    - if @export.children.any?
      .row
        .col-lg-12
        - coll = @export.children.order(:created_at).paginate(page: params[:page] || 1)
        = table_builder_2 coll,
          [ \
            TableBuilderHelper::Column.new( \
              key: :status, \
              attribute: Proc.new { |n| export_status(n.status) }, \
            ), \
            TableBuilderHelper::Column.new( \
              key: :started_at, \
              attribute: Proc.new { |n| l(n.started_at, format: :long) if n.started_at }, \
            ), \
            TableBuilderHelper::Column.new( \
              key: :name, \
              attribute: 'name', \
              link_to: lambda do |export| \
                workbench_export_path(@workbench, export) \
              end \
            ), \
            TableBuilderHelper::Column.new( \
              key: :creator, \
              attribute: 'creator' \
            ) \
          ],
          cls: 'table has-search'

        = new_pagination coll, 'pull-right'
